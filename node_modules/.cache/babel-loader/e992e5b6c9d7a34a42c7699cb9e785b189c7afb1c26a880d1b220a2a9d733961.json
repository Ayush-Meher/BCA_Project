{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SPIDER\\\\Downloads\\\\Project\\\\Demo GPT\\\\Demo 1\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport JavaScriptConsole from './JavaScriptConsole';\nimport TechTree from './TechTree';\nimport Game3D from './Game3D';\nimport Market from './Market';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: #1a1a1a;\n  color: white;\n`;\nconst MainArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding: 20px;\n  gap: 20px;\n`;\nconst GameHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  background-color: #2c3e50;\n  border-radius: 5px;\n`;\n_c = GameHeader;\nconst GameInfo = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n_c2 = GameInfo;\nconst InfoItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n_c3 = InfoItem;\nconst GameContent = styled.div`\n  display: flex;\n  gap: 20px;\n  width: 100%;\n  max-width: 1200px;\n  height: calc(100vh - 100px);\n`;\n_c4 = GameContent;\nconst GameScene = styled.div`\n  flex-grow: 1;\n  background-color: #2c3e50;\n  border-radius: 5px;\n  overflow: hidden;\n  height: 500px;\n`;\nconst ConsoleArea = styled.div`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n_c5 = ConsoleArea;\nconst MoneyDisplay = styled.div`\n  font-size: 1.5em;\n  font-weight: bold;\n  color: #f1c40f;\n  text-align: center;\n  padding: 10px;\n  background-color: #34495e;\n  border-radius: 5px;\n`;\nconst GameGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.size}, 1fr);\n  grid-template-rows: repeat(${props => props.size}, 1fr);\n  gap: 5px;\n  width: 300px;\n  height: 300px;\n  background-color: #8B4513;\n  padding: 10px;\n  border-radius: 5px;\n`;\n_c6 = GameGrid;\nconst LandTile = styled.div`\n  width: 100%;\n  aspect-ratio: 1;\n  background-color: ${props => {\n  if (props.isPlowed) return '#8B4513';\n  if (props.hasCrop && props.cropState === 'growing') return '#90EE90';\n  if (props.hasCrop && props.cropState === 'ready') return '#228B22';\n  return '#90EE90';\n}};\n  border: 1px solid #2c3e50;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n_c7 = LandTile;\nconst CropIndicator = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 80%;\n  height: 80%;\n  background-color: ${props => props.color};\n  border-radius: 50%;\n`;\n_c8 = CropIndicator;\nconst GameStats = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px;\n  background-color: #fff;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n_c9 = GameStats;\nconst ToolBar = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  flex-wrap: wrap;\n`;\nconst ToolButton = styled.button`\n  background-color: ${props => props.selected ? '#2980b9' : '#3498db'};\n  border: ${props => props.selected ? '2px solid #fff' : 'none'};\n  padding: ${props => props.selected ? '6px 14px' : '8px 16px'};\n`;\nconst CropSelector = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst CropButton = styled.button`\n  background-color: ${props => props.selected ? '#27ae60' : '#2ecc71'};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  \n  &:disabled {\n    background-color: #95a5a6;\n    cursor: not-allowed;\n  }\n`;\nconst CropIcon = styled.span`\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n  margin-right: 5px;\n`;\nconst DroneSprite = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 40%;\n  height: 40%;\n  background-color: #3498db;\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n  transition: all 0.3s ease;\n  z-index: 2;\n  \n  &::before {\n    content: 'ðŸ›¸';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 20px;\n  }\n`;\n_c10 = DroneSprite;\nconst ConsoleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  height: 100%;\n`;\nconst ConsoleTabs = styled.div`\n  display: flex;\n  gap: 5px;\n  margin-bottom: 10px;\n`;\nconst ConsoleTab = styled.button`\n  background-color: ${props => props.active ? '#3498db' : '#2c3e50'};\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 3px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: ${props => props.active ? '#2980b9' : '#34495e'};\n  }\n`;\nconst AddConsoleButton = styled.button`\n  background-color: #27ae60;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 3px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: #219653;\n  }\n`;\nconst ConsoleWrapper = styled.div`\n  display: ${props => props.active ? 'block' : 'none'};\n  height: 100%;\n`;\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  gap: 20px;\n`;\n_c11 = GameContainer;\nconst GameTitle = styled.h1`\n  color: #2c3e50;\n  margin: 0;\n`;\nconst GameCanvas = styled.div`\n  flex: 1;\n  height: 600px;\n  background-color: white;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  position: relative;\n`;\nconst GameControls = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 300px;\n`;\nconst Button = styled.button`\n  padding: 10px 15px;\n  background-color: #3498db;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #2980b9;\n  }\n`;\nconst ThreeDView = styled.div`\n  flex: 1;\n  height: 100%;\n  background-color: #fff;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n_c12 = ThreeDView;\nexport const Game = ({\n  inventory,\n  setInventory,\n  money,\n  setMoney,\n  onOpenTechTree,\n  unlockedCrops\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [gameState, setGameState] = useState({\n    grid: Array(1).fill().map(() => Array(1).fill(null)),\n    money: money,\n    inventory: {\n      wheat: 0,\n      corn: 0,\n      potato: 0\n    },\n    dronePosition: {\n      x: 0,\n      y: 0\n    },\n    droneInventory: [],\n    land: Array(1).fill().map(() => ({\n      isPlowed: false,\n      hasCrop: false,\n      cropType: null,\n      cropState: null\n    })),\n    drone: {\n      x: 0,\n      y: 0\n    }\n  });\n  const saveGame = () => {\n    localStorage.setItem('farmGame', JSON.stringify(gameState));\n    alert('Game saved!');\n  };\n  const loadGame = () => {\n    const savedGame = localStorage.getItem('farmGame');\n    if (savedGame) {\n      setGameState(JSON.parse(savedGame));\n      alert('Game loaded!');\n    } else {\n      alert('No saved game found!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GameHeader, {\n      children: [/*#__PURE__*/_jsxDEV(GameInfo, {\n        children: [/*#__PURE__*/_jsxDEV(InfoItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDCB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", money]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDF31\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Seeds: \", Object.entries(inventory).filter(([key]) => key.endsWith('_seeds')).length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDF3E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Crops: \", Object.entries(inventory).filter(([key]) => !key.endsWith('_seeds')).length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onOpenTechTree,\n        children: \"Tech Tree\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameContent, {\n      children: [/*#__PURE__*/_jsxDEV(GameGrid, {\n        size: Math.sqrt(gameState.land.length),\n        children: gameState.land.map((tile, index) => {\n          const x = Math.floor(index / Math.sqrt(gameState.land.length));\n          const y = index % Math.sqrt(gameState.land.length);\n          const isDroneHere = gameState.dronePosition.x === x && gameState.dronePosition.y === y;\n          return /*#__PURE__*/_jsxDEV(LandTile, {\n            isPlowed: tile.isPlowed,\n            hasCrop: tile.hasCrop,\n            cropState: tile.cropState,\n            children: [tile.hasCrop && /*#__PURE__*/_jsxDEV(CropIndicator, {\n              color: tile.cropType === 'wheat' ? '#F4D03F' : tile.cropType === 'corn' ? '#F39C12' : tile.cropType === 'potato' ? '#935116' : '#90EE90'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this), isDroneHere && /*#__PURE__*/_jsxDEV(DroneSprite, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThreeDView, {\n        children: /*#__PURE__*/_jsxDEV(Game3D, {\n          gameState: gameState,\n          setGameState: setGameState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConsoleArea, {\n      children: /*#__PURE__*/_jsxDEV(JavaScriptConsole, {\n        gameState: gameState,\n        setGameState: setGameState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameStats, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Money: $\", money]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Drone Position: (\", gameState.dronePosition.x, \", \", gameState.dronePosition.y, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Drone Inventory: \", JSON.stringify(gameState.droneInventory)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Market, {\n      money: money,\n      setMoney: setMoney,\n      inventory: inventory,\n      setInventory: setInventory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"T+fDyRyUtm+TDrOUAUzwAQJY1ZY=\", false, function () {\n  return [useNavigate];\n});\n_c13 = Game;\nexport default Game;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"GameHeader\");\n$RefreshReg$(_c2, \"GameInfo\");\n$RefreshReg$(_c3, \"InfoItem\");\n$RefreshReg$(_c4, \"GameContent\");\n$RefreshReg$(_c5, \"ConsoleArea\");\n$RefreshReg$(_c6, \"GameGrid\");\n$RefreshReg$(_c7, \"LandTile\");\n$RefreshReg$(_c8, \"CropIndicator\");\n$RefreshReg$(_c9, \"GameStats\");\n$RefreshReg$(_c10, \"DroneSprite\");\n$RefreshReg$(_c11, \"GameContainer\");\n$RefreshReg$(_c12, \"ThreeDView\");\n$RefreshReg$(_c13, \"Game\");","map":{"version":3,"names":["React","useState","styled","useNavigate","JavaScriptConsole","TechTree","Game3D","Market","jsxDEV","_jsxDEV","GameLayout","div","MainArea","GameHeader","_c","GameInfo","_c2","InfoItem","_c3","GameContent","_c4","GameScene","ConsoleArea","_c5","MoneyDisplay","GameGrid","props","size","_c6","LandTile","isPlowed","hasCrop","cropState","_c7","CropIndicator","color","_c8","GameStats","_c9","ToolBar","ToolButton","button","selected","CropSelector","CropButton","CropIcon","span","DroneSprite","_c10","ConsoleContainer","ConsoleTabs","ConsoleTab","active","AddConsoleButton","ConsoleWrapper","GameContainer","_c11","GameTitle","h1","GameCanvas","GameControls","Button","ThreeDView","_c12","Game","inventory","setInventory","money","setMoney","onOpenTechTree","unlockedCrops","_s","navigate","gameState","setGameState","grid","Array","fill","map","wheat","corn","potato","dronePosition","x","y","droneInventory","land","cropType","drone","saveGame","localStorage","setItem","JSON","stringify","alert","loadGame","savedGame","getItem","parse","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","filter","key","endsWith","length","onClick","Math","sqrt","tile","index","floor","isDroneHere","_c13","$RefreshReg$"],"sources":["C:/Users/SPIDER/Downloads/Project/Demo GPT/Demo 1/src/components/Game.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport JavaScriptConsole from './JavaScriptConsole';\r\nimport TechTree from './TechTree';\r\nimport Game3D from './Game3D';\r\nimport Market from './Market';\r\n\r\nconst GameLayout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  background-color: #1a1a1a;\r\n  color: white;\r\n`;\r\n\r\nconst MainArea = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  padding: 20px;\r\n  gap: 20px;\r\n`;\r\n\r\nconst GameHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background-color: #2c3e50;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst GameInfo = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n`;\r\n\r\nconst InfoItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n`;\r\n\r\nconst GameContent = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  height: calc(100vh - 100px);\r\n`;\r\n\r\nconst GameScene = styled.div`\r\n  flex-grow: 1;\r\n  background-color: #2c3e50;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  height: 500px;\r\n`;\r\n\r\nconst ConsoleArea = styled.div`\r\n  width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst MoneyDisplay = styled.div`\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n  color: #f1c40f;\r\n  text-align: center;\r\n  padding: 10px;\r\n  background-color: #34495e;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst GameGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(${props => props.size}, 1fr);\r\n  grid-template-rows: repeat(${props => props.size}, 1fr);\r\n  gap: 5px;\r\n  width: 300px;\r\n  height: 300px;\r\n  background-color: #8B4513;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst LandTile = styled.div`\r\n  width: 100%;\r\n  aspect-ratio: 1;\r\n  background-color: ${props => {\r\n    if (props.isPlowed) return '#8B4513';\r\n    if (props.hasCrop && props.cropState === 'growing') return '#90EE90';\r\n    if (props.hasCrop && props.cropState === 'ready') return '#228B22';\r\n    return '#90EE90';\r\n  }};\r\n  border: 1px solid #2c3e50;\r\n  cursor: pointer;\r\n  position: relative;\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst CropIndicator = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 80%;\r\n  height: 80%;\r\n  background-color: ${props => props.color};\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst GameStats = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst ToolBar = styled.div`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst ToolButton = styled.button`\r\n  background-color: ${props => props.selected ? '#2980b9' : '#3498db'};\r\n  border: ${props => props.selected ? '2px solid #fff' : 'none'};\r\n  padding: ${props => props.selected ? '6px 14px' : '8px 16px'};\r\n`;\r\n\r\nconst CropSelector = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst CropButton = styled.button`\r\n  background-color: ${props => props.selected ? '#27ae60' : '#2ecc71'};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  \r\n  &:disabled {\r\n    background-color: #95a5a6;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst CropIcon = styled.span`\r\n  display: inline-block;\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 50%;\r\n  background-color: ${props => props.color};\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst DroneSprite = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 40%;\r\n  height: 40%;\r\n  background-color: #3498db;\r\n  border-radius: 50%;\r\n  transform: translate(-50%, -50%);\r\n  transition: all 0.3s ease;\r\n  z-index: 2;\r\n  \r\n  &::before {\r\n    content: 'ðŸ›¸';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst ConsoleContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  height: 100%;\r\n`;\r\n\r\nconst ConsoleTabs = styled.div`\r\n  display: flex;\r\n  gap: 5px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ConsoleTab = styled.button`\r\n  background-color: ${props => props.active ? '#3498db' : '#2c3e50'};\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    background-color: ${props => props.active ? '#2980b9' : '#34495e'};\r\n  }\r\n`;\r\n\r\nconst AddConsoleButton = styled.button`\r\n  background-color: #27ae60;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    background-color: #219653;\r\n  }\r\n`;\r\n\r\nconst ConsoleWrapper = styled.div`\r\n  display: ${props => props.active ? 'block' : 'none'};\r\n  height: 100%;\r\n`;\r\n\r\nconst GameContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  gap: 20px;\r\n`;\r\n\r\nconst GameTitle = styled.h1`\r\n  color: #2c3e50;\r\n  margin: 0;\r\n`;\r\n\r\nconst GameCanvas = styled.div`\r\n  flex: 1;\r\n  height: 600px;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  position: relative;\r\n`;\r\n\r\nconst GameControls = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 300px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 15px;\r\n  background-color: #3498db;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background-color: #2980b9;\r\n  }\r\n`;\r\n\r\nconst ThreeDView = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Game = ({ inventory, setInventory, money, setMoney, onOpenTechTree, unlockedCrops }) => {\r\n  const navigate = useNavigate();\r\n  const [gameState, setGameState] = useState({\r\n    grid: Array(1).fill().map(() => Array(1).fill(null)),\r\n    money: money,\r\n    inventory: {\r\n      wheat: 0,\r\n      corn: 0,\r\n      potato: 0\r\n    },\r\n    dronePosition: { x: 0, y: 0 },\r\n    droneInventory: [],\r\n    land: Array(1).fill().map(() => ({\r\n      isPlowed: false,\r\n      hasCrop: false,\r\n      cropType: null,\r\n      cropState: null\r\n    })),\r\n    drone: {\r\n      x: 0,\r\n      y: 0\r\n    }\r\n  });\r\n\r\n  const saveGame = () => {\r\n    localStorage.setItem('farmGame', JSON.stringify(gameState));\r\n    alert('Game saved!');\r\n  };\r\n\r\n  const loadGame = () => {\r\n    const savedGame = localStorage.getItem('farmGame');\r\n    if (savedGame) {\r\n      setGameState(JSON.parse(savedGame));\r\n      alert('Game loaded!');\r\n    } else {\r\n      alert('No saved game found!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GameContainer>\r\n      <GameHeader>\r\n        <GameInfo>\r\n          <InfoItem>\r\n            <span>ðŸ’°</span>\r\n            <span>${money}</span>\r\n          </InfoItem>\r\n          <InfoItem>\r\n            <span>ðŸŒ±</span>\r\n            <span>Seeds: {Object.entries(inventory).filter(([key]) => key.endsWith('_seeds')).length}</span>\r\n          </InfoItem>\r\n          <InfoItem>\r\n            <span>ðŸŒ¾</span>\r\n            <span>Crops: {Object.entries(inventory).filter(([key]) => !key.endsWith('_seeds')).length}</span>\r\n          </InfoItem>\r\n        </GameInfo>\r\n        <button onClick={onOpenTechTree}>Tech Tree</button>\r\n      </GameHeader>\r\n      \r\n      <GameContent>\r\n        <GameGrid size={Math.sqrt(gameState.land.length)}>\r\n          {gameState.land.map((tile, index) => {\r\n            const x = Math.floor(index / Math.sqrt(gameState.land.length));\r\n            const y = index % Math.sqrt(gameState.land.length);\r\n            const isDroneHere = gameState.dronePosition.x === x && gameState.dronePosition.y === y;\r\n            \r\n            return (\r\n              <LandTile \r\n                key={index}\r\n                isPlowed={tile.isPlowed}\r\n                hasCrop={tile.hasCrop}\r\n                cropState={tile.cropState}\r\n              >\r\n                {tile.hasCrop && (\r\n                  <CropIndicator \r\n                    color={\r\n                      tile.cropType === 'wheat' ? '#F4D03F' :\r\n                      tile.cropType === 'corn' ? '#F39C12' :\r\n                      tile.cropType === 'potato' ? '#935116' :\r\n                      '#90EE90'\r\n                    }\r\n                  />\r\n                )}\r\n                {isDroneHere && <DroneSprite />}\r\n              </LandTile>\r\n            );\r\n          })}\r\n        </GameGrid>\r\n        \r\n        <ThreeDView>\r\n          <Game3D gameState={gameState} setGameState={setGameState} />\r\n        </ThreeDView>\r\n      </GameContent>\r\n      \r\n      <ConsoleArea>\r\n        <JavaScriptConsole gameState={gameState} setGameState={setGameState} />\r\n      </ConsoleArea>\r\n\r\n      <GameStats>\r\n        <div>Money: ${money}</div>\r\n        <div>Drone Position: ({gameState.dronePosition.x}, {gameState.dronePosition.y})</div>\r\n        <div>Drone Inventory: {JSON.stringify(gameState.droneInventory)}</div>\r\n      </GameStats>\r\n\r\n      <Market\r\n        money={money}\r\n        setMoney={setMoney}\r\n        inventory={inventory}\r\n        setInventory={setInventory}\r\n      />\r\n    </GameContainer>\r\n  );\r\n};\r\n\r\nexport default Game; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}