{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SPIDER\\\\Downloads\\\\Project\\\\Demo GPT\\\\Demo 1\\\\src\\\\components\\\\Game3D.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls, Environment, useGLTF, Float } from '@react-three/drei';\nimport * as THREE from 'three';\n\n// 3D Models\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FarmTile({\n  position,\n  isPlowed,\n  hasCrop,\n  cropType,\n  cropState\n}) {\n  _s();\n  const tileRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    position: position,\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [-Math.PI / 2, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [1, 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: isPlowed ? '#8B4513' : '#556B2F',\n        roughness: 0.8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), hasCrop && /*#__PURE__*/_jsxDEV(Float, {\n      speed: 1.5,\n      rotationIntensity: 0.2,\n      floatIntensity: 0.2,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        position: [0, 0.5, 0],\n        children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n          args: [0.2, 0.8, 0.2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          color: cropState === 'ready' ? '#FFD700' : '#32CD32',\n          roughness: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(FarmTile, \"1hMJNSoDTheSTUYHOlSMC4gK9lI=\");\n_c = FarmTile;\nfunction Drone({\n  position\n}) {\n  _s2();\n  const droneRef = useRef();\n  useFrame(state => {\n    if (droneRef.current) {\n      droneRef.current.rotation.y += 0.01;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ref: droneRef,\n    position: [position.x, 1, position.y],\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n        args: [0.5, 0.2, 0.5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: \"#3498db\",\n        metalness: 0.8,\n        roughness: 0.2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0.1, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"cylinderGeometry\", {\n        args: [0.1, 0.1, 0.4, 8]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: \"#2c3e50\",\n        metalness: 0.8,\n        roughness: 0.2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s2(Drone, \"IJINhbqdra5CzOeGBMh3HkdB80g=\", false, function () {\n  return [useFrame];\n});\n_c2 = Drone;\nfunction FarmGrid({\n  size,\n  land\n}) {\n  const tiles = [];\n  for (let y = 0; y < size; y++) {\n    for (let x = 0; x < size; x++) {\n      const index = y * size + x;\n      const tile = land[index];\n      tiles.push(/*#__PURE__*/_jsxDEV(FarmTile, {\n        position: [x - size / 2, 0, y - size / 2],\n        isPlowed: tile.isPlowed,\n        hasCrop: tile.hasCrop,\n        cropType: tile.cropType,\n        cropState: tile.cropState\n      }, `${x}-${y}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tiles\n  }, void 0, false);\n}\n_c3 = FarmGrid;\nfunction Game3D({\n  gameState,\n  setGameState\n}) {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [5, 5, 5],\n      fov: 50\n    },\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n      position: [10, 10, 5],\n      intensity: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Environment, {\n      preset: \"sunset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FarmGrid, {\n      size: Math.sqrt(gameState.land.length),\n      land: gameState.land\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drone, {\n      position: gameState.drone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      enablePan: true,\n      enableZoom: true,\n      enableRotate: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_c4 = Game3D;\nexport default Game3D;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"FarmTile\");\n$RefreshReg$(_c2, \"Drone\");\n$RefreshReg$(_c3, \"FarmGrid\");\n$RefreshReg$(_c4, \"Game3D\");","map":{"version":3,"names":["React","useRef","useState","Canvas","useFrame","OrbitControls","Environment","useGLTF","Float","THREE","jsxDEV","_jsxDEV","Fragment","_Fragment","FarmTile","position","isPlowed","hasCrop","cropType","cropState","_s","tileRef","children","rotation","Math","PI","args","fileName","_jsxFileName","lineNumber","columnNumber","color","roughness","speed","rotationIntensity","floatIntensity","_c","Drone","_s2","droneRef","state","current","y","ref","x","metalness","_c2","FarmGrid","size","land","tiles","index","tile","push","_c3","Game3D","gameState","setGameState","camera","fov","style","width","height","intensity","preset","sqrt","length","drone","enablePan","enableZoom","enableRotate","_c4","$RefreshReg$"],"sources":["C:/Users/SPIDER/Downloads/Project/Demo GPT/Demo 1/src/components/Game3D.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { Canvas, useFrame } from '@react-three/fiber';\r\nimport { OrbitControls, Environment, useGLTF, Float } from '@react-three/drei';\r\nimport * as THREE from 'three';\r\n\r\n// 3D Models\r\nfunction FarmTile({ position, isPlowed, hasCrop, cropType, cropState }) {\r\n  const tileRef = useRef();\r\n  \r\n  return (\r\n    <group position={position}>\r\n      {/* Ground tile */}\r\n      <mesh rotation={[-Math.PI / 2, 0, 0]}>\r\n        <planeGeometry args={[1, 1]} />\r\n        <meshStandardMaterial \r\n          color={isPlowed ? '#8B4513' : '#556B2F'} \r\n          roughness={0.8}\r\n        />\r\n      </mesh>\r\n      \r\n      {/* Crop visualization */}\r\n      {hasCrop && (\r\n        <Float speed={1.5} rotationIntensity={0.2} floatIntensity={0.2}>\r\n          <mesh position={[0, 0.5, 0]}>\r\n            <boxGeometry args={[0.2, 0.8, 0.2]} />\r\n            <meshStandardMaterial \r\n              color={cropState === 'ready' ? '#FFD700' : '#32CD32'}\r\n              roughness={0.5}\r\n            />\r\n          </mesh>\r\n        </Float>\r\n      )}\r\n    </group>\r\n  );\r\n}\r\n\r\nfunction Drone({ position }) {\r\n  const droneRef = useRef();\r\n  \r\n  useFrame((state) => {\r\n    if (droneRef.current) {\r\n      droneRef.current.rotation.y += 0.01;\r\n    }\r\n  });\r\n  \r\n  return (\r\n    <group ref={droneRef} position={[position.x, 1, position.y]}>\r\n      <mesh>\r\n        <boxGeometry args={[0.5, 0.2, 0.5]} />\r\n        <meshStandardMaterial color=\"#3498db\" metalness={0.8} roughness={0.2} />\r\n      </mesh>\r\n      <mesh position={[0, 0.1, 0]}>\r\n        <cylinderGeometry args={[0.1, 0.1, 0.4, 8]} />\r\n        <meshStandardMaterial color=\"#2c3e50\" metalness={0.8} roughness={0.2} />\r\n      </mesh>\r\n    </group>\r\n  );\r\n}\r\n\r\nfunction FarmGrid({ size, land }) {\r\n  const tiles = [];\r\n  \r\n  for (let y = 0; y < size; y++) {\r\n    for (let x = 0; x < size; x++) {\r\n      const index = y * size + x;\r\n      const tile = land[index];\r\n      \r\n      tiles.push(\r\n        <FarmTile\r\n          key={`${x}-${y}`}\r\n          position={[x - size/2, 0, y - size/2]}\r\n          isPlowed={tile.isPlowed}\r\n          hasCrop={tile.hasCrop}\r\n          cropType={tile.cropType}\r\n          cropState={tile.cropState}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  \r\n  return <>{tiles}</>;\r\n}\r\n\r\nfunction Game3D({ gameState, setGameState }) {\r\n  return (\r\n    <Canvas\r\n      camera={{ position: [5, 5, 5], fov: 50 }}\r\n      style={{ width: '100%', height: '100%' }}\r\n    >\r\n      <ambientLight intensity={0.5} />\r\n      <directionalLight position={[10, 10, 5]} intensity={1} />\r\n      <Environment preset=\"sunset\" />\r\n      \r\n      <FarmGrid size={Math.sqrt(gameState.land.length)} land={gameState.land} />\r\n      <Drone position={gameState.drone} />\r\n      \r\n      <OrbitControls\r\n        enablePan={true}\r\n        enableZoom={true}\r\n        enableRotate={true}\r\n      />\r\n    </Canvas>\r\n  );\r\n}\r\n\r\nexport default Game3D; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}