{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SPIDER\\\\Downloads\\\\Project\\\\Demo GPT\\\\Demo 1\\\\src\\\\components\\\\TechTree.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n`;\n_c = Overlay;\nconst Modal = styled.div`\n  background-color: #34495e;\n  padding: 20px;\n  border-radius: 10px;\n  max-width: 90vw;\n  max-height: 90vh;\n  overflow-y: auto;\n  position: relative;\n`;\n_c2 = Modal;\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: none;\n  border: none;\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  z-index: 1;\n  \n  &:hover {\n    color: #e74c3c;\n  }\n`;\n_c3 = CloseButton;\nconst TechTreeContainer = styled.div`\n  background-color: #34495e;\n  padding: 15px;\n  border-radius: 5px;\n  margin-top: 20px;\n`;\nconst TechTreeHeader = styled.h3`\n  color: #fff;\n  margin-bottom: 15px;\n  text-align: center;\n`;\n_c4 = TechTreeHeader;\nconst TechTreeGrid = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n`;\n_c5 = TechTreeGrid;\nconst TechRow = styled.div`\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 0;\n    right: 0;\n    height: 2px;\n    background-color: #7f8c8d;\n    z-index: 0;\n  }\n`;\n_c6 = TechRow;\nconst TechNode = styled.div`\n  background-color: ${props => {\n  if (props.locked) return '#95a5a6';\n  if (props.unlocked) return '#2c3e50';\n  return props.type === 'upgrade' ? '#cd853f' : '#2ecc71';\n}};\n  padding: 10px;\n  border-radius: 5px;\n  cursor: ${props => props.canUnlock && !props.unlocked ? 'pointer' : 'default'};\n  opacity: ${props => props.canUnlock || props.unlocked ? 1 : 0.7};\n  min-width: 120px;\n  text-align: center;\n  position: relative;\n  z-index: 1;\n  \n  &:hover {\n    transform: ${props => props.canUnlock && !props.unlocked ? 'scale(1.05)' : 'none'};\n  }\n`;\n_c7 = TechNode;\nconst TechName = styled.div`\n  color: #fff;\n  font-weight: bold;\n  margin-bottom: 5px;\n`;\n_c8 = TechName;\nconst TechCost = styled.div`\n  color: ${props => props.canAfford ? '#2ecc71' : '#e74c3c'};\n  font-size: 0.8em;\n`;\n_c9 = TechCost;\nconst ResourceDisplay = styled.div`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  margin-bottom: 15px;\n  background-color: #2c3e50;\n  padding: 10px;\n  border-radius: 5px;\n`;\n_c10 = ResourceDisplay;\nconst Resource = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  color: #fff;\n`;\n_c11 = Resource;\nconst ResourceIcon = styled.div`\n  width: 20px;\n  height: 20px;\n  background-color: ${props => props.color};\n  border-radius: 50%;\n`;\n_c12 = ResourceIcon;\nfunction TechTree({\n  money,\n  setMoney,\n  onUnlock,\n  onClose\n}) {\n  _s();\n  const [techs, setTechs] = useState({\n    loops: {\n      id: 'loops',\n      name: 'Loops',\n      unlocked: true,\n      cost: 0,\n      type: 'unlock'\n    },\n    speed: {\n      id: 'speed',\n      name: 'Speed',\n      unlocked: false,\n      cost: 100,\n      type: 'upgrade',\n      requires: ['loops']\n    },\n    grass: {\n      id: 'grass',\n      name: 'Grass',\n      unlocked: false,\n      cost: 100,\n      type: 'upgrade',\n      requires: ['loops']\n    },\n    expand: {\n      id: 'expand',\n      name: 'Expand',\n      unlocked: false,\n      cost: 200,\n      type: 'upgrade',\n      requires: ['speed']\n    },\n    plant: {\n      id: 'plant',\n      name: 'Plant',\n      unlocked: true,\n      cost: 0,\n      type: 'unlock',\n      requires: ['loops']\n    },\n    carrots: {\n      id: 'carrots',\n      name: 'Carrots',\n      unlocked: false,\n      cost: 150,\n      type: 'upgrade',\n      requires: ['plant']\n    },\n    debug: {\n      id: 'debug',\n      name: 'Debug',\n      unlocked: true,\n      cost: 0,\n      type: 'unlock',\n      requires: ['plant']\n    },\n    operators: {\n      id: 'operators',\n      name: 'Operators',\n      unlocked: true,\n      cost: 0,\n      type: 'unlock',\n      requires: ['plant']\n    },\n    watering: {\n      id: 'watering',\n      name: 'Watering',\n      unlocked: false,\n      cost: 300,\n      type: 'upgrade',\n      requires: ['carrots']\n    },\n    trees: {\n      id: 'trees',\n      name: 'Trees',\n      unlocked: false,\n      cost: 250,\n      type: 'unlock',\n      requires: ['carrots']\n    },\n    debug_2: {\n      id: 'debug_2',\n      name: 'Debug 2',\n      unlocked: false,\n      cost: 200,\n      type: 'unlock',\n      requires: ['debug']\n    },\n    timing: {\n      id: 'timing',\n      name: 'Timing',\n      unlocked: false,\n      cost: 200,\n      type: 'unlock',\n      requires: ['debug']\n    },\n    senses: {\n      id: 'senses',\n      name: 'Senses',\n      unlocked: false,\n      cost: 200,\n      type: 'unlock',\n      requires: ['operators']\n    },\n    variables: {\n      id: 'variables',\n      name: 'Variables',\n      unlocked: false,\n      cost: 200,\n      type: 'unlock',\n      requires: ['operators']\n    },\n    fertilizer: {\n      id: 'fertilizer',\n      name: 'Fertilizer',\n      unlocked: false,\n      cost: 400,\n      type: 'unlock',\n      requires: ['watering']\n    },\n    sunflowers: {\n      id: 'sunflowers',\n      name: 'Sunflowers',\n      unlocked: false,\n      cost: 400,\n      type: 'unlock',\n      requires: ['watering']\n    },\n    pumpkins: {\n      id: 'pumpkins',\n      name: 'Pumpkins',\n      unlocked: false,\n      cost: 500,\n      type: 'unlock',\n      requires: ['trees']\n    },\n    simulation: {\n      id: 'simulation',\n      name: 'Simulation',\n      unlocked: false,\n      cost: 600,\n      type: 'unlock',\n      requires: ['timing']\n    },\n    lists: {\n      id: 'lists',\n      name: 'Lists',\n      unlocked: false,\n      cost: 600,\n      type: 'unlock',\n      requires: ['senses']\n    },\n    functions: {\n      id: 'functions',\n      name: 'Functions',\n      unlocked: false,\n      cost: 600,\n      type: 'unlock',\n      requires: ['variables']\n    }\n  });\n  const canUnlockTech = techId => {\n    const tech = techs[techId];\n    if (!tech || tech.unlocked) return false;\n    if (money < tech.cost) return false;\n\n    // Check if all required techs are unlocked\n    if (tech.requires) {\n      return tech.requires.every(reqId => {\n        var _techs$reqId;\n        return (_techs$reqId = techs[reqId]) === null || _techs$reqId === void 0 ? void 0 : _techs$reqId.unlocked;\n      });\n    }\n    return true;\n  };\n  const unlockTech = techId => {\n    const tech = techs[techId];\n    if (!tech || !canUnlockTech(techId)) return;\n    setMoney(prev => prev - tech.cost);\n    setTechs(prev => ({\n      ...prev,\n      [techId]: {\n        ...prev[techId],\n        unlocked: true\n      }\n    }));\n    if (onUnlock) {\n      onUnlock(techId);\n    }\n  };\n  const renderTechNode = techId => {\n    const tech = techs[techId];\n    if (!tech) return null;\n    return /*#__PURE__*/_jsxDEV(TechNode, {\n      unlocked: tech.unlocked,\n      locked: !tech.unlocked && !canUnlockTech(techId),\n      canUnlock: canUnlockTech(techId),\n      onClick: () => canUnlockTech(techId) && unlockTech(techId),\n      type: tech.type,\n      children: [/*#__PURE__*/_jsxDEV(TechName, {\n        children: tech.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), !tech.unlocked && /*#__PURE__*/_jsxDEV(TechCost, {\n        canAfford: money >= tech.cost,\n        children: [\"Cost: $\", tech.cost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)]\n    }, techId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Overlay, {\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TechTreeHeader, {\n        children: \"Technology Tree\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResourceDisplay, {\n        children: /*#__PURE__*/_jsxDEV(Resource, {\n          children: [/*#__PURE__*/_jsxDEV(ResourceIcon, {\n            color: \"#f1c40f\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", money]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TechTreeGrid, {\n        children: [/*#__PURE__*/_jsxDEV(TechRow, {\n          children: renderTechNode('loops')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TechRow, {\n          children: [renderTechNode('speed'), renderTechNode('grass')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TechRow, {\n          children: [renderTechNode('expand'), renderTechNode('plant')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TechRow, {\n          children: [renderTechNode('carrots'), renderTechNode('debug'), renderTechNode('operators')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TechRow, {\n          children: [renderTechNode('watering'), renderTechNode('trees'), renderTechNode('debug_2'), renderTechNode('timing'), renderTechNode('senses'), renderTechNode('variables')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TechRow, {\n          children: [renderTechNode('fertilizer'), renderTechNode('sunflowers'), renderTechNode('pumpkins'), renderTechNode('simulation'), renderTechNode('lists'), renderTechNode('functions')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(TechTree, \"cXzv1P8onqc4oLfaB34ew5A4rTw=\");\n_c13 = TechTree;\nexport default TechTree;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"Overlay\");\n$RefreshReg$(_c2, \"Modal\");\n$RefreshReg$(_c3, \"CloseButton\");\n$RefreshReg$(_c4, \"TechTreeHeader\");\n$RefreshReg$(_c5, \"TechTreeGrid\");\n$RefreshReg$(_c6, \"TechRow\");\n$RefreshReg$(_c7, \"TechNode\");\n$RefreshReg$(_c8, \"TechName\");\n$RefreshReg$(_c9, \"TechCost\");\n$RefreshReg$(_c10, \"ResourceDisplay\");\n$RefreshReg$(_c11, \"Resource\");\n$RefreshReg$(_c12, \"ResourceIcon\");\n$RefreshReg$(_c13, \"TechTree\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","Overlay","div","_c","Modal","_c2","CloseButton","button","_c3","TechTreeContainer","TechTreeHeader","h3","_c4","TechTreeGrid","_c5","TechRow","_c6","TechNode","props","locked","unlocked","type","canUnlock","_c7","TechName","_c8","TechCost","canAfford","_c9","ResourceDisplay","_c10","Resource","_c11","ResourceIcon","color","_c12","TechTree","money","setMoney","onUnlock","onClose","_s","techs","setTechs","loops","id","name","cost","speed","requires","grass","expand","plant","carrots","debug","operators","watering","trees","debug_2","timing","senses","variables","fertilizer","sunflowers","pumpkins","simulation","lists","functions","canUnlockTech","techId","tech","every","reqId","_techs$reqId","unlockTech","prev","renderTechNode","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","_c13","$RefreshReg$"],"sources":["C:/Users/SPIDER/Downloads/Project/Demo GPT/Demo 1/src/components/TechTree.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n  background-color: #34495e;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  max-width: 90vw;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  position: relative;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  background: none;\r\n  border: none;\r\n  color: white;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  z-index: 1;\r\n  \r\n  &:hover {\r\n    color: #e74c3c;\r\n  }\r\n`;\r\n\r\nconst TechTreeContainer = styled.div`\r\n  background-color: #34495e;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst TechTreeHeader = styled.h3`\r\n  color: #fff;\r\n  margin-bottom: 15px;\r\n  text-align: center;\r\n`;\r\n\r\nconst TechTreeGrid = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  align-items: center;\r\n`;\r\n\r\nconst TechRow = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  justify-content: center;\r\n  position: relative;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    right: 0;\r\n    height: 2px;\r\n    background-color: #7f8c8d;\r\n    z-index: 0;\r\n  }\r\n`;\r\n\r\nconst TechNode = styled.div`\r\n  background-color: ${props => {\r\n    if (props.locked) return '#95a5a6';\r\n    if (props.unlocked) return '#2c3e50';\r\n    return props.type === 'upgrade' ? '#cd853f' : '#2ecc71';\r\n  }};\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  cursor: ${props => (props.canUnlock && !props.unlocked) ? 'pointer' : 'default'};\r\n  opacity: ${props => (props.canUnlock || props.unlocked) ? 1 : 0.7};\r\n  min-width: 120px;\r\n  text-align: center;\r\n  position: relative;\r\n  z-index: 1;\r\n  \r\n  &:hover {\r\n    transform: ${props => (props.canUnlock && !props.unlocked) ? 'scale(1.05)' : 'none'};\r\n  }\r\n`;\r\n\r\nconst TechName = styled.div`\r\n  color: #fff;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst TechCost = styled.div`\r\n  color: ${props => props.canAfford ? '#2ecc71' : '#e74c3c'};\r\n  font-size: 0.8em;\r\n`;\r\n\r\nconst ResourceDisplay = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  justify-content: center;\r\n  margin-bottom: 15px;\r\n  background-color: #2c3e50;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Resource = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  color: #fff;\r\n`;\r\n\r\nconst ResourceIcon = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: ${props => props.color};\r\n  border-radius: 50%;\r\n`;\r\n\r\nfunction TechTree({ money, setMoney, onUnlock, onClose }) {\r\n  const [techs, setTechs] = useState({\r\n    loops: { id: 'loops', name: 'Loops', unlocked: true, cost: 0, type: 'unlock' },\r\n    speed: { id: 'speed', name: 'Speed', unlocked: false, cost: 100, type: 'upgrade', requires: ['loops'] },\r\n    grass: { id: 'grass', name: 'Grass', unlocked: false, cost: 100, type: 'upgrade', requires: ['loops'] },\r\n    expand: { id: 'expand', name: 'Expand', unlocked: false, cost: 200, type: 'upgrade', requires: ['speed'] },\r\n    plant: { id: 'plant', name: 'Plant', unlocked: true, cost: 0, type: 'unlock', requires: ['loops'] },\r\n    carrots: { id: 'carrots', name: 'Carrots', unlocked: false, cost: 150, type: 'upgrade', requires: ['plant'] },\r\n    debug: { id: 'debug', name: 'Debug', unlocked: true, cost: 0, type: 'unlock', requires: ['plant'] },\r\n    operators: { id: 'operators', name: 'Operators', unlocked: true, cost: 0, type: 'unlock', requires: ['plant'] },\r\n    watering: { id: 'watering', name: 'Watering', unlocked: false, cost: 300, type: 'upgrade', requires: ['carrots'] },\r\n    trees: { id: 'trees', name: 'Trees', unlocked: false, cost: 250, type: 'unlock', requires: ['carrots'] },\r\n    debug_2: { id: 'debug_2', name: 'Debug 2', unlocked: false, cost: 200, type: 'unlock', requires: ['debug'] },\r\n    timing: { id: 'timing', name: 'Timing', unlocked: false, cost: 200, type: 'unlock', requires: ['debug'] },\r\n    senses: { id: 'senses', name: 'Senses', unlocked: false, cost: 200, type: 'unlock', requires: ['operators'] },\r\n    variables: { id: 'variables', name: 'Variables', unlocked: false, cost: 200, type: 'unlock', requires: ['operators'] },\r\n    fertilizer: { id: 'fertilizer', name: 'Fertilizer', unlocked: false, cost: 400, type: 'unlock', requires: ['watering'] },\r\n    sunflowers: { id: 'sunflowers', name: 'Sunflowers', unlocked: false, cost: 400, type: 'unlock', requires: ['watering'] },\r\n    pumpkins: { id: 'pumpkins', name: 'Pumpkins', unlocked: false, cost: 500, type: 'unlock', requires: ['trees'] },\r\n    simulation: { id: 'simulation', name: 'Simulation', unlocked: false, cost: 600, type: 'unlock', requires: ['timing'] },\r\n    lists: { id: 'lists', name: 'Lists', unlocked: false, cost: 600, type: 'unlock', requires: ['senses'] },\r\n    functions: { id: 'functions', name: 'Functions', unlocked: false, cost: 600, type: 'unlock', requires: ['variables'] }\r\n  });\r\n\r\n  const canUnlockTech = (techId) => {\r\n    const tech = techs[techId];\r\n    if (!tech || tech.unlocked) return false;\r\n    if (money < tech.cost) return false;\r\n    \r\n    // Check if all required techs are unlocked\r\n    if (tech.requires) {\r\n      return tech.requires.every(reqId => techs[reqId]?.unlocked);\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const unlockTech = (techId) => {\r\n    const tech = techs[techId];\r\n    if (!tech || !canUnlockTech(techId)) return;\r\n\r\n    setMoney(prev => prev - tech.cost);\r\n    setTechs(prev => ({\r\n      ...prev,\r\n      [techId]: { ...prev[techId], unlocked: true }\r\n    }));\r\n\r\n    if (onUnlock) {\r\n      onUnlock(techId);\r\n    }\r\n  };\r\n\r\n  const renderTechNode = (techId) => {\r\n    const tech = techs[techId];\r\n    if (!tech) return null;\r\n\r\n    return (\r\n      <TechNode\r\n        key={techId}\r\n        unlocked={tech.unlocked}\r\n        locked={!tech.unlocked && !canUnlockTech(techId)}\r\n        canUnlock={canUnlockTech(techId)}\r\n        onClick={() => canUnlockTech(techId) && unlockTech(techId)}\r\n        type={tech.type}\r\n      >\r\n        <TechName>{tech.name}</TechName>\r\n        {!tech.unlocked && (\r\n          <TechCost canAfford={money >= tech.cost}>\r\n            Cost: ${tech.cost}\r\n          </TechCost>\r\n        )}\r\n      </TechNode>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Overlay onClick={onClose}>\r\n      <Modal onClick={e => e.stopPropagation()}>\r\n        <CloseButton onClick={onClose}>&times;</CloseButton>\r\n        \r\n        <TechTreeHeader>Technology Tree</TechTreeHeader>\r\n        \r\n        <ResourceDisplay>\r\n          <Resource>\r\n            <ResourceIcon color=\"#f1c40f\" />\r\n            <span>${money}</span>\r\n          </Resource>\r\n        </ResourceDisplay>\r\n\r\n        <TechTreeGrid>\r\n          <TechRow>\r\n            {renderTechNode('loops')}\r\n          </TechRow>\r\n          \r\n          <TechRow>\r\n            {renderTechNode('speed')}\r\n            {renderTechNode('grass')}\r\n          </TechRow>\r\n          \r\n          <TechRow>\r\n            {renderTechNode('expand')}\r\n            {renderTechNode('plant')}\r\n          </TechRow>\r\n          \r\n          <TechRow>\r\n            {renderTechNode('carrots')}\r\n            {renderTechNode('debug')}\r\n            {renderTechNode('operators')}\r\n          </TechRow>\r\n          \r\n          <TechRow>\r\n            {renderTechNode('watering')}\r\n            {renderTechNode('trees')}\r\n            {renderTechNode('debug_2')}\r\n            {renderTechNode('timing')}\r\n            {renderTechNode('senses')}\r\n            {renderTechNode('variables')}\r\n          </TechRow>\r\n          \r\n          <TechRow>\r\n            {renderTechNode('fertilizer')}\r\n            {renderTechNode('sunflowers')}\r\n            {renderTechNode('pumpkins')}\r\n            {renderTechNode('simulation')}\r\n            {renderTechNode('lists')}\r\n            {renderTechNode('functions')}\r\n          </TechRow>\r\n        </TechTreeGrid>\r\n      </Modal>\r\n    </Overlay>\r\n  );\r\n}\r\n\r\nexport default TechTree; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}