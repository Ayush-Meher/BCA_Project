{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SPIDER\\\\Downloads\\\\Project\\\\Demo GPT\\\\Demo 1\\\\src\\\\components\\\\Inventory.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryContainer = styled.div`\n  background-color: #34495e;\n  padding: 15px;\n  border-radius: 5px;\n  margin-bottom: 20px;\n`;\n_c = InventoryContainer;\nconst InventoryHeader = styled.h3`\n  color: #fff;\n  margin-bottom: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c2 = InventoryHeader;\nconst InventoryGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n`;\n_c3 = InventoryGrid;\nconst ItemCard = styled.div`\n  background-color: #2c3e50;\n  padding: 10px;\n  border-radius: 4px;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  \n  &:hover {\n    transform: scale(1.02);\n    background-color: #3d566e;\n  }\n`;\n_c4 = ItemCard;\nconst ItemIcon = styled.div`\n  width: 24px;\n  height: 24px;\n  background-color: ${props => props.color || '#3498db'};\n  border-radius: 4px;\n  margin-right: 10px;\n`;\n_c5 = ItemIcon;\nconst ItemDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c6 = ItemDetails;\nconst ItemName = styled.div`\n  font-weight: bold;\n  margin-bottom: 2px;\n`;\n_c7 = ItemName;\nconst ItemCount = styled.div`\n  font-size: 0.8em;\n  color: #95a5a6;\n`;\n_c8 = ItemCount;\nconst EmptyInventory = styled.div`\n  text-align: center;\n  padding: 15px;\n  color: #95a5a6;\n  font-style: italic;\n`;\n_c9 = EmptyInventory;\nfunction Inventory({\n  playerInventory\n}) {\n  const inventory = [{\n    id: 'wheat',\n    name: 'Wheat',\n    count: (playerInventory === null || playerInventory === void 0 ? void 0 : playerInventory.wheat) || 0,\n    color: '#f1c40f'\n  }, {\n    id: 'corn',\n    name: 'Corn',\n    count: (playerInventory === null || playerInventory === void 0 ? void 0 : playerInventory.corn) || 0,\n    color: '#f39c12'\n  }, {\n    id: 'potato',\n    name: 'Potato',\n    count: (playerInventory === null || playerInventory === void 0 ? void 0 : playerInventory.potato) || 0,\n    color: '#d35400'\n  }, {\n    id: 'wheat_seeds',\n    name: 'Wheat Seeds',\n    count: (playerInventory === null || playerInventory === void 0 ? void 0 : playerInventory.wheat_seeds) || 0,\n    color: '#2ecc71'\n  }, {\n    id: 'corn_seeds',\n    name: 'Corn Seeds',\n    count: (playerInventory === null || playerInventory === void 0 ? void 0 : playerInventory.corn_seeds) || 0,\n    color: '#27ae60'\n  }, {\n    id: 'potato_seeds',\n    name: 'Potato Seeds',\n    count: (playerInventory === null || playerInventory === void 0 ? void 0 : playerInventory.potato_seeds) || 0,\n    color: '#16a085'\n  }];\n  const hasItems = inventory.some(item => item.count > 0);\n  return /*#__PURE__*/_jsxDEV(InventoryContainer, {\n    children: [/*#__PURE__*/_jsxDEV(InventoryHeader, {\n      children: \"Inventory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), hasItems ? /*#__PURE__*/_jsxDEV(InventoryGrid, {\n      children: inventory.map(item => item.count > 0 && /*#__PURE__*/_jsxDEV(ItemCard, {\n        children: [/*#__PURE__*/_jsxDEV(ItemIcon, {\n          color: item.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ItemDetails, {\n          children: [/*#__PURE__*/_jsxDEV(ItemName, {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(ItemCount, {\n            children: [\"x\", item.count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(EmptyInventory, {\n      children: \"Your inventory is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_c10 = Inventory;\nexport default Inventory;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"InventoryContainer\");\n$RefreshReg$(_c2, \"InventoryHeader\");\n$RefreshReg$(_c3, \"InventoryGrid\");\n$RefreshReg$(_c4, \"ItemCard\");\n$RefreshReg$(_c5, \"ItemIcon\");\n$RefreshReg$(_c6, \"ItemDetails\");\n$RefreshReg$(_c7, \"ItemName\");\n$RefreshReg$(_c8, \"ItemCount\");\n$RefreshReg$(_c9, \"EmptyInventory\");\n$RefreshReg$(_c10, \"Inventory\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","InventoryContainer","div","_c","InventoryHeader","h3","_c2","InventoryGrid","_c3","ItemCard","_c4","ItemIcon","props","color","_c5","ItemDetails","_c6","ItemName","_c7","ItemCount","_c8","EmptyInventory","_c9","Inventory","playerInventory","inventory","id","name","count","wheat","corn","potato","wheat_seeds","corn_seeds","potato_seeds","hasItems","some","item","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c10","$RefreshReg$"],"sources":["C:/Users/SPIDER/Downloads/Project/Demo GPT/Demo 1/src/components/Inventory.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst InventoryContainer = styled.div`\r\n  background-color: #34495e;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst InventoryHeader = styled.h3`\r\n  color: #fff;\r\n  margin-bottom: 15px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst InventoryGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 10px;\r\n`;\r\n\r\nconst ItemCard = styled.div`\r\n  background-color: #2c3e50;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  transition: all 0.3s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  \r\n  &:hover {\r\n    transform: scale(1.02);\r\n    background-color: #3d566e;\r\n  }\r\n`;\r\n\r\nconst ItemIcon = styled.div`\r\n  width: 24px;\r\n  height: 24px;\r\n  background-color: ${props => props.color || '#3498db'};\r\n  border-radius: 4px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ItemDetails = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ItemName = styled.div`\r\n  font-weight: bold;\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nconst ItemCount = styled.div`\r\n  font-size: 0.8em;\r\n  color: #95a5a6;\r\n`;\r\n\r\nconst EmptyInventory = styled.div`\r\n  text-align: center;\r\n  padding: 15px;\r\n  color: #95a5a6;\r\n  font-style: italic;\r\n`;\r\n\r\nfunction Inventory({ playerInventory }) {\r\n  const inventory = [\r\n    { id: 'wheat', name: 'Wheat', count: playerInventory?.wheat || 0, color: '#f1c40f' },\r\n    { id: 'corn', name: 'Corn', count: playerInventory?.corn || 0, color: '#f39c12' },\r\n    { id: 'potato', name: 'Potato', count: playerInventory?.potato || 0, color: '#d35400' },\r\n    { id: 'wheat_seeds', name: 'Wheat Seeds', count: playerInventory?.wheat_seeds || 0, color: '#2ecc71' },\r\n    { id: 'corn_seeds', name: 'Corn Seeds', count: playerInventory?.corn_seeds || 0, color: '#27ae60' },\r\n    { id: 'potato_seeds', name: 'Potato Seeds', count: playerInventory?.potato_seeds || 0, color: '#16a085' }\r\n  ];\r\n\r\n  const hasItems = inventory.some(item => item.count > 0);\r\n\r\n  return (\r\n    <InventoryContainer>\r\n      <InventoryHeader>\r\n        Inventory\r\n      </InventoryHeader>\r\n      \r\n      {hasItems ? (\r\n        <InventoryGrid>\r\n          {inventory.map(item => \r\n            item.count > 0 && (\r\n              <ItemCard key={item.id}>\r\n                <ItemIcon color={item.color} />\r\n                <ItemDetails>\r\n                  <ItemName>{item.name}</ItemName>\r\n                  <ItemCount>x{item.count}</ItemCount>\r\n                </ItemDetails>\r\n              </ItemCard>\r\n            )\r\n          )}\r\n        </InventoryGrid>\r\n      ) : (\r\n        <EmptyInventory>Your inventory is empty</EmptyInventory>\r\n      )}\r\n    </InventoryContainer>\r\n  );\r\n}\r\n\r\nexport default Inventory; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}