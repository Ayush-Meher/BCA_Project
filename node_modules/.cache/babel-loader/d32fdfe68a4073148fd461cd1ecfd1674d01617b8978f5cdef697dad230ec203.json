{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SPIDER\\\\Downloads\\\\Project\\\\Demo GPT\\\\Demo 1\\\\src\\\\components\\\\TechTree.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TechTreeContainer = styled.div`\n  background-color: #34495e;\n  padding: 15px;\n  border-radius: 5px;\n  margin-bottom: 20px;\n`;\n_c = TechTreeContainer;\nconst TechTreeHeader = styled.h3`\n  color: #fff;\n  margin-bottom: 15px;\n`;\n_c2 = TechTreeHeader;\nconst TechNode = styled.div`\n  background-color: ${props => props.unlocked ? '#2ecc71' : '#95a5a6'};\n  color: white;\n  padding: 10px;\n  margin: 5px 0;\n  border-radius: 4px;\n  cursor: ${props => props.canUnlock ? 'pointer' : 'not-allowed'};\n  opacity: ${props => props.unlocked ? 1 : 0.7};\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: ${props => props.canUnlock ? 'scale(1.02)' : 'none'};\n  }\n`;\n_c3 = TechNode;\nconst TechName = styled.div`\n  font-weight: bold;\n  margin-bottom: 5px;\n`;\n_c4 = TechName;\nconst TechDescription = styled.div`\n  font-size: 0.9em;\n  margin-bottom: 5px;\n`;\n_c5 = TechDescription;\nconst TechCost = styled.div`\n  font-size: 0.8em;\n  color: ${props => props.canAfford ? '#fff' : '#e74c3c'};\n`;\n_c6 = TechCost;\nfunction TechTree() {\n  _s();\n  const [techs, setTechs] = useState([{\n    id: 1,\n    name: 'Basic Tools',\n    description: 'Unlock basic farming tools',\n    cost: 50,\n    unlocked: true,\n    unlocks: [2]\n  }, {\n    id: 2,\n    name: 'Land Expansion',\n    description: 'Increase farm size by 1x1',\n    cost: 100,\n    unlocked: false,\n    unlocks: [3]\n  }, {\n    id: 3,\n    name: 'Advanced Crops',\n    description: 'Unlock new crop types',\n    cost: 200,\n    unlocked: false,\n    unlocks: [4]\n  }, {\n    id: 4,\n    name: 'Automation',\n    description: 'Automatic planting and harvesting',\n    cost: 500,\n    unlocked: false,\n    unlocks: []\n  }]);\n  const [money, setMoney] = useState(100);\n  const canUnlockTech = tech => {\n    if (tech.unlocked) return false;\n    if (money < tech.cost) return false;\n    return tech.unlocks.some(id => {\n      var _techs$find;\n      return (_techs$find = techs.find(t => t.id === id)) === null || _techs$find === void 0 ? void 0 : _techs$find.unlocked;\n    });\n  };\n  const unlockTech = techId => {\n    const tech = techs.find(t => t.id === techId);\n    if (!tech || !canUnlockTech(tech)) return;\n    setMoney(prev => prev - tech.cost);\n    setTechs(prev => prev.map(t => t.id === techId ? {\n      ...t,\n      unlocked: true\n    } : t));\n  };\n  return /*#__PURE__*/_jsxDEV(TechTreeContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TechTreeHeader, {\n      children: \"Technology Tree\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), techs.map(tech => /*#__PURE__*/_jsxDEV(TechNode, {\n      unlocked: tech.unlocked,\n      canUnlock: canUnlockTech(tech),\n      onClick: () => unlockTech(tech.id),\n      children: [/*#__PURE__*/_jsxDEV(TechName, {\n        children: tech.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TechDescription, {\n        children: tech.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TechCost, {\n        canAfford: money >= tech.cost,\n        children: [\"Cost: $\", tech.cost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, tech.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(TechTree, \"lIcp+/q4hcKVKZvLewzfrgyNUGQ=\");\n_c7 = TechTree;\nexport default TechTree;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"TechTreeContainer\");\n$RefreshReg$(_c2, \"TechTreeHeader\");\n$RefreshReg$(_c3, \"TechNode\");\n$RefreshReg$(_c4, \"TechName\");\n$RefreshReg$(_c5, \"TechDescription\");\n$RefreshReg$(_c6, \"TechCost\");\n$RefreshReg$(_c7, \"TechTree\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","TechTreeContainer","div","_c","TechTreeHeader","h3","_c2","TechNode","props","unlocked","canUnlock","_c3","TechName","_c4","TechDescription","_c5","TechCost","canAfford","_c6","TechTree","_s","techs","setTechs","id","name","description","cost","unlocks","money","setMoney","canUnlockTech","tech","some","_techs$find","find","t","unlockTech","techId","prev","map","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c7","$RefreshReg$"],"sources":["C:/Users/SPIDER/Downloads/Project/Demo GPT/Demo 1/src/components/TechTree.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TechTreeContainer = styled.div`\r\n  background-color: #34495e;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst TechTreeHeader = styled.h3`\r\n  color: #fff;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst TechNode = styled.div`\r\n  background-color: ${props => props.unlocked ? '#2ecc71' : '#95a5a6'};\r\n  color: white;\r\n  padding: 10px;\r\n  margin: 5px 0;\r\n  border-radius: 4px;\r\n  cursor: ${props => props.canUnlock ? 'pointer' : 'not-allowed'};\r\n  opacity: ${props => props.unlocked ? 1 : 0.7};\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: ${props => props.canUnlock ? 'scale(1.02)' : 'none'};\r\n  }\r\n`;\r\n\r\nconst TechName = styled.div`\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst TechDescription = styled.div`\r\n  font-size: 0.9em;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst TechCost = styled.div`\r\n  font-size: 0.8em;\r\n  color: ${props => props.canAfford ? '#fff' : '#e74c3c'};\r\n`;\r\n\r\nfunction TechTree() {\r\n  const [techs, setTechs] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'Basic Tools',\r\n      description: 'Unlock basic farming tools',\r\n      cost: 50,\r\n      unlocked: true,\r\n      unlocks: [2]\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Land Expansion',\r\n      description: 'Increase farm size by 1x1',\r\n      cost: 100,\r\n      unlocked: false,\r\n      unlocks: [3]\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Advanced Crops',\r\n      description: 'Unlock new crop types',\r\n      cost: 200,\r\n      unlocked: false,\r\n      unlocks: [4]\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Automation',\r\n      description: 'Automatic planting and harvesting',\r\n      cost: 500,\r\n      unlocked: false,\r\n      unlocks: []\r\n    }\r\n  ]);\r\n\r\n  const [money, setMoney] = useState(100);\r\n\r\n  const canUnlockTech = (tech) => {\r\n    if (tech.unlocked) return false;\r\n    if (money < tech.cost) return false;\r\n    return tech.unlocks.some(id => techs.find(t => t.id === id)?.unlocked);\r\n  };\r\n\r\n  const unlockTech = (techId) => {\r\n    const tech = techs.find(t => t.id === techId);\r\n    if (!tech || !canUnlockTech(tech)) return;\r\n\r\n    setMoney(prev => prev - tech.cost);\r\n    setTechs(prev => prev.map(t => \r\n      t.id === techId ? { ...t, unlocked: true } : t\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <TechTreeContainer>\r\n      <TechTreeHeader>Technology Tree</TechTreeHeader>\r\n      {techs.map(tech => (\r\n        <TechNode\r\n          key={tech.id}\r\n          unlocked={tech.unlocked}\r\n          canUnlock={canUnlockTech(tech)}\r\n          onClick={() => unlockTech(tech.id)}\r\n        >\r\n          <TechName>{tech.name}</TechName>\r\n          <TechDescription>{tech.description}</TechDescription>\r\n          <TechCost canAfford={money >= tech.cost}>\r\n            Cost: ${tech.cost}\r\n          </TechCost>\r\n        </TechNode>\r\n      ))}\r\n    </TechTreeContainer>\r\n  );\r\n}\r\n\r\nexport default TechTree; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}