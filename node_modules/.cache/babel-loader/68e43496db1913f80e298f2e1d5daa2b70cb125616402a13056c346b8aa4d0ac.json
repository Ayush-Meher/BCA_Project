{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SPIDER\\\\Downloads\\\\Project\\\\Demo GPT\\\\Demo 1\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport Instructions from './Instructions';\nimport JavaScriptConsole from './JavaScriptConsole';\nimport TechTree from './TechTree';\nimport Game3D from './Game3D';\nimport Farm3D from './Farm3D';\nimport Market from './Market';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: #1a1a1a;\n  color: white;\n`;\nconst MainArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding: 20px;\n  gap: 20px;\n`;\nconst GameHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  background-color: #2c3e50;\n  border-radius: 5px;\n`;\n_c = GameHeader;\nconst GameInfo = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n_c2 = GameInfo;\nconst InfoItem = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n_c3 = InfoItem;\nconst GameContent = styled.div`\n  display: flex;\n  gap: 20px;\n  width: 100%;\n  max-width: 1200px;\n  height: calc(100vh - 100px);\n`;\n_c4 = GameContent;\nconst GameScene = styled.div`\n  flex-grow: 1;\n  background-color: #2c3e50;\n  border-radius: 5px;\n  overflow: hidden;\n  height: 500px;\n`;\nconst ConsoleArea = styled.div`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n_c5 = ConsoleArea;\nconst MoneyDisplay = styled.div`\n  font-size: 1.5em;\n  font-weight: bold;\n  color: #f1c40f;\n  text-align: center;\n  padding: 10px;\n  background-color: #34495e;\n  border-radius: 5px;\n`;\nconst GameGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: repeat(5, 1fr);\n  gap: 5px;\n  width: 300px;\n  height: 300px;\n  background-color: #8B4513;\n  padding: 10px;\n  border-radius: 5px;\n`;\n_c6 = GameGrid;\nconst LandTile = styled.div`\n  width: 100%;\n  aspect-ratio: 1;\n  background-color: ${props => {\n  if (props.isPlowed) return '#8B4513';\n  if (props.hasCrop && props.cropState === 'growing') return '#90EE90';\n  if (props.hasCrop && props.cropState === 'ready') return '#228B22';\n  return '#90EE90';\n}};\n  border: 1px solid #2c3e50;\n  cursor: pointer;\n  position: relative;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\nconst CropIndicator = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 80%;\n  height: 80%;\n  background-color: ${props => props.color};\n  border-radius: 50%;\n`;\nconst GameStats = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 10px;\n  background-color: #fff;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n_c7 = GameStats;\nconst ToolBar = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  flex-wrap: wrap;\n`;\nconst ToolButton = styled.button`\n  background-color: ${props => props.selected ? '#2980b9' : '#3498db'};\n  border: ${props => props.selected ? '2px solid #fff' : 'none'};\n  padding: ${props => props.selected ? '6px 14px' : '8px 16px'};\n`;\nconst CropSelector = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst CropButton = styled.button`\n  background-color: ${props => props.selected ? '#27ae60' : '#2ecc71'};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  \n  &:disabled {\n    background-color: #95a5a6;\n    cursor: not-allowed;\n  }\n`;\nconst CropIcon = styled.span`\n  display: inline-block;\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background-color: ${props => props.color};\n  margin-right: 5px;\n`;\nconst DroneSprite = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 40%;\n  height: 40%;\n  background-color: #3498db;\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n  transition: all 0.3s ease;\n  z-index: 2;\n  \n  &::before {\n    content: 'ðŸ›¸';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 20px;\n  }\n`;\nconst ConsoleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  height: 100%;\n`;\nconst ConsoleTabs = styled.div`\n  display: flex;\n  gap: 5px;\n  margin-bottom: 10px;\n`;\nconst ConsoleTab = styled.button`\n  background-color: ${props => props.active ? '#3498db' : '#2c3e50'};\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 3px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: ${props => props.active ? '#2980b9' : '#34495e'};\n  }\n`;\nconst AddConsoleButton = styled.button`\n  background-color: #27ae60;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 3px;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: #219653;\n  }\n`;\nconst ConsoleWrapper = styled.div`\n  display: ${props => props.active ? 'block' : 'none'};\n  height: 100%;\n`;\nconst GameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  gap: 20px;\n`;\n_c8 = GameContainer;\nconst GameTitle = styled.h1`\n  color: #2c3e50;\n  margin: 0;\n`;\nconst GameCanvas = styled.div`\n  flex: 1;\n  height: 600px;\n  background-color: white;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  position: relative;\n`;\nconst GameControls = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 300px;\n`;\nconst Button = styled.button`\n  padding: 10px 15px;\n  background-color: #3498db;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: #2980b9;\n  }\n`;\nconst ThreeDView = styled.div`\n  flex: 1;\n  height: 100%;\n  background-color: #fff;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n_c9 = ThreeDView;\nexport const Game = ({\n  inventory,\n  setInventory,\n  money,\n  setMoney,\n  onOpenTechTree,\n  unlockedCrops\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const canvasRef = useRef(null);\n  const [gameState, setGameState] = useState({\n    grid: Array(5).fill().map(() => Array(5).fill(null)),\n    money: money,\n    inventory: {\n      wheat: 0,\n      corn: 0,\n      potato: 0\n    },\n    dronePosition: {\n      x: 0,\n      y: 0\n    },\n    droneInventory: []\n  });\n\n  // Three.js variables\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const modelsRef = useRef({});\n  const droneRef = useRef(null);\n  useEffect(() => {\n    // Initialize Three.js scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf0f0f0);\n    const camera = new THREE.PerspectiveCamera(75, 1, 0.1, 1000);\n    camera.position.set(5, 5, 5);\n    camera.lookAt(0, 0, 0);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(600, 600);\n    canvasRef.current.appendChild(renderer.domElement);\n\n    // Add lights\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(5, 5, 5);\n    scene.add(directionalLight);\n\n    // Load 3D models\n    const loader = new GLTFLoader();\n    const models = {};\n\n    // Load drone model\n    loader.load('/models/drone.glb', gltf => {\n      const drone = gltf.scene;\n      drone.scale.set(0.5, 0.5, 0.5);\n      drone.position.set(0, 0.5, 0);\n      scene.add(drone);\n      droneRef.current = drone;\n      models.drone = drone;\n    });\n\n    // Load crop models\n    ['wheat', 'corn', 'potato'].forEach(crop => {\n      loader.load(`/models/${crop}.glb`, gltf => {\n        const model = gltf.scene;\n        model.scale.set(0.3, 0.3, 0.3);\n        model.visible = false;\n        scene.add(model);\n        models[crop] = model;\n      });\n    });\n\n    // Store references\n    sceneRef.current = scene;\n    cameraRef.current = camera;\n    rendererRef.current = renderer;\n    modelsRef.current = models;\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup\n    return () => {\n      canvasRef.current.removeChild(renderer.domElement);\n      renderer.dispose();\n    };\n  }, []);\n  useEffect(() => {\n    // Update drone position\n    if (droneRef.current) {\n      droneRef.current.position.set(gameState.dronePosition.x - 2, 0.5, gameState.dronePosition.y - 2);\n    }\n\n    // Update crop positions\n    gameState.grid.forEach((row, x) => {\n      row.forEach((cell, y) => {\n        if (cell && modelsRef.current[cell.type]) {\n          const model = modelsRef.current[cell.type];\n          model.position.set(x - 2, 0, y - 2);\n          model.visible = true;\n        }\n      });\n    });\n  }, [gameState]);\n  const saveGame = () => {\n    localStorage.setItem('farmGame', JSON.stringify(gameState));\n    alert('Game saved!');\n  };\n  const loadGame = () => {\n    const savedGame = localStorage.getItem('farmGame');\n    if (savedGame) {\n      setGameState(JSON.parse(savedGame));\n      alert('Game loaded!');\n    } else {\n      alert('No saved game found!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GameContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GameHeader, {\n      children: [/*#__PURE__*/_jsxDEV(GameInfo, {\n        children: [/*#__PURE__*/_jsxDEV(InfoItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83D\\uDCB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"$\", money]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDF31\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Seeds: \", Object.entries(inventory).filter(([key]) => key.endsWith('_seeds')).length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoItem, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDF3E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Crops: \", Object.entries(inventory).filter(([key]) => !key.endsWith('_seeds')).length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onOpenTechTree,\n        children: \"Tech Tree\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameContent, {\n      children: [/*#__PURE__*/_jsxDEV(GameGrid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThreeDView, {\n        children: /*#__PURE__*/_jsxDEV(Farm3D, {\n          farmState: {\n            grid: gameState.grid,\n            dronePosition: gameState.dronePosition,\n            droneInventory: gameState.droneInventory\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConsoleArea, {\n      children: /*#__PURE__*/_jsxDEV(JavaScriptConsole, {\n        gameState: gameState,\n        setGameState: setGameState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameStats, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Money: $\", money]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Drone Position: (\", gameState.dronePosition.x, \", \", gameState.dronePosition.y, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Drone Inventory: \", JSON.stringify(gameState.droneInventory)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Market, {\n      money: money,\n      setMoney: setMoney,\n      inventory: inventory,\n      setInventory: setInventory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 417,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"7W8S45FPRPo0BTToTyYwf3ADkl8=\", false, function () {\n  return [useNavigate];\n});\n_c10 = Game;\nexport default Game;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"GameHeader\");\n$RefreshReg$(_c2, \"GameInfo\");\n$RefreshReg$(_c3, \"InfoItem\");\n$RefreshReg$(_c4, \"GameContent\");\n$RefreshReg$(_c5, \"ConsoleArea\");\n$RefreshReg$(_c6, \"GameGrid\");\n$RefreshReg$(_c7, \"GameStats\");\n$RefreshReg$(_c8, \"GameContainer\");\n$RefreshReg$(_c9, \"ThreeDView\");\n$RefreshReg$(_c10, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","useNavigate","THREE","GLTFLoader","Instructions","JavaScriptConsole","TechTree","Game3D","Farm3D","Market","jsxDEV","_jsxDEV","GameLayout","div","MainArea","GameHeader","_c","GameInfo","_c2","InfoItem","_c3","GameContent","_c4","GameScene","ConsoleArea","_c5","MoneyDisplay","GameGrid","_c6","LandTile","props","isPlowed","hasCrop","cropState","CropIndicator","color","GameStats","_c7","ToolBar","ToolButton","button","selected","CropSelector","CropButton","CropIcon","span","DroneSprite","ConsoleContainer","ConsoleTabs","ConsoleTab","active","AddConsoleButton","ConsoleWrapper","GameContainer","_c8","GameTitle","h1","GameCanvas","GameControls","Button","ThreeDView","_c9","Game","inventory","setInventory","money","setMoney","onOpenTechTree","unlockedCrops","_s","navigate","canvasRef","gameState","setGameState","grid","Array","fill","map","wheat","corn","potato","dronePosition","x","y","droneInventory","sceneRef","cameraRef","rendererRef","modelsRef","droneRef","scene","Scene","background","Color","camera","PerspectiveCamera","position","set","lookAt","renderer","WebGLRenderer","antialias","setSize","current","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","loader","models","load","gltf","drone","scale","forEach","crop","model","visible","animate","requestAnimationFrame","render","removeChild","dispose","row","cell","type","saveGame","localStorage","setItem","JSON","stringify","alert","loadGame","savedGame","getItem","parse","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","filter","key","endsWith","length","onClick","farmState","_c10","$RefreshReg$"],"sources":["C:/Users/SPIDER/Downloads/Project/Demo GPT/Demo 1/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport Instructions from './Instructions';\r\nimport JavaScriptConsole from './JavaScriptConsole';\r\nimport TechTree from './TechTree';\r\nimport Game3D from './Game3D';\r\nimport Farm3D from './Farm3D';\r\nimport Market from './Market';\r\n\r\nconst GameLayout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  background-color: #1a1a1a;\r\n  color: white;\r\n`;\r\n\r\nconst MainArea = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n  padding: 20px;\r\n  gap: 20px;\r\n`;\r\n\r\nconst GameHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background-color: #2c3e50;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst GameInfo = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n`;\r\n\r\nconst InfoItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n`;\r\n\r\nconst GameContent = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  height: calc(100vh - 100px);\r\n`;\r\n\r\nconst GameScene = styled.div`\r\n  flex-grow: 1;\r\n  background-color: #2c3e50;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  height: 500px;\r\n`;\r\n\r\nconst ConsoleArea = styled.div`\r\n  width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst MoneyDisplay = styled.div`\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n  color: #f1c40f;\r\n  text-align: center;\r\n  padding: 10px;\r\n  background-color: #34495e;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst GameGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-template-rows: repeat(5, 1fr);\r\n  gap: 5px;\r\n  width: 300px;\r\n  height: 300px;\r\n  background-color: #8B4513;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst LandTile = styled.div`\r\n  width: 100%;\r\n  aspect-ratio: 1;\r\n  background-color: ${props => {\r\n    if (props.isPlowed) return '#8B4513';\r\n    if (props.hasCrop && props.cropState === 'growing') return '#90EE90';\r\n    if (props.hasCrop && props.cropState === 'ready') return '#228B22';\r\n    return '#90EE90';\r\n  }};\r\n  border: 1px solid #2c3e50;\r\n  cursor: pointer;\r\n  position: relative;\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nconst CropIndicator = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 80%;\r\n  height: 80%;\r\n  background-color: ${props => props.color};\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst GameStats = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst ToolBar = styled.div`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst ToolButton = styled.button`\r\n  background-color: ${props => props.selected ? '#2980b9' : '#3498db'};\r\n  border: ${props => props.selected ? '2px solid #fff' : 'none'};\r\n  padding: ${props => props.selected ? '6px 14px' : '8px 16px'};\r\n`;\r\n\r\nconst CropSelector = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst CropButton = styled.button`\r\n  background-color: ${props => props.selected ? '#27ae60' : '#2ecc71'};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  \r\n  &:disabled {\r\n    background-color: #95a5a6;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst CropIcon = styled.span`\r\n  display: inline-block;\r\n  width: 12px;\r\n  height: 12px;\r\n  border-radius: 50%;\r\n  background-color: ${props => props.color};\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst DroneSprite = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 40%;\r\n  height: 40%;\r\n  background-color: #3498db;\r\n  border-radius: 50%;\r\n  transform: translate(-50%, -50%);\r\n  transition: all 0.3s ease;\r\n  z-index: 2;\r\n  \r\n  &::before {\r\n    content: 'ðŸ›¸';\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nconst ConsoleContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  height: 100%;\r\n`;\r\n\r\nconst ConsoleTabs = styled.div`\r\n  display: flex;\r\n  gap: 5px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ConsoleTab = styled.button`\r\n  background-color: ${props => props.active ? '#3498db' : '#2c3e50'};\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    background-color: ${props => props.active ? '#2980b9' : '#34495e'};\r\n  }\r\n`;\r\n\r\nconst AddConsoleButton = styled.button`\r\n  background-color: #27ae60;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    background-color: #219653;\r\n  }\r\n`;\r\n\r\nconst ConsoleWrapper = styled.div`\r\n  display: ${props => props.active ? 'block' : 'none'};\r\n  height: 100%;\r\n`;\r\n\r\nconst GameContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  gap: 20px;\r\n`;\r\n\r\nconst GameTitle = styled.h1`\r\n  color: #2c3e50;\r\n  margin: 0;\r\n`;\r\n\r\nconst GameCanvas = styled.div`\r\n  flex: 1;\r\n  height: 600px;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  position: relative;\r\n`;\r\n\r\nconst GameControls = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 300px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 10px 15px;\r\n  background-color: #3498db;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background-color: #2980b9;\r\n  }\r\n`;\r\n\r\nconst ThreeDView = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Game = ({ inventory, setInventory, money, setMoney, onOpenTechTree, unlockedCrops }) => {\r\n  const navigate = useNavigate();\r\n  const canvasRef = useRef(null);\r\n  const [gameState, setGameState] = useState({\r\n    grid: Array(5).fill().map(() => Array(5).fill(null)),\r\n    money: money,\r\n    inventory: {\r\n      wheat: 0,\r\n      corn: 0,\r\n      potato: 0\r\n    },\r\n    dronePosition: { x: 0, y: 0 },\r\n    droneInventory: []\r\n  });\r\n\r\n  // Three.js variables\r\n  const sceneRef = useRef(null);\r\n  const cameraRef = useRef(null);\r\n  const rendererRef = useRef(null);\r\n  const modelsRef = useRef({});\r\n  const droneRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize Three.js scene\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0xf0f0f0);\r\n    \r\n    const camera = new THREE.PerspectiveCamera(75, 1, 0.1, 1000);\r\n    camera.position.set(5, 5, 5);\r\n    camera.lookAt(0, 0, 0);\r\n    \r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(600, 600);\r\n    canvasRef.current.appendChild(renderer.domElement);\r\n\r\n    // Add lights\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\r\n    scene.add(ambientLight);\r\n    \r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\r\n    directionalLight.position.set(5, 5, 5);\r\n    scene.add(directionalLight);\r\n\r\n    // Load 3D models\r\n    const loader = new GLTFLoader();\r\n    const models = {};\r\n\r\n    // Load drone model\r\n    loader.load('/models/drone.glb', (gltf) => {\r\n      const drone = gltf.scene;\r\n      drone.scale.set(0.5, 0.5, 0.5);\r\n      drone.position.set(0, 0.5, 0);\r\n      scene.add(drone);\r\n      droneRef.current = drone;\r\n      models.drone = drone;\r\n    });\r\n\r\n    // Load crop models\r\n    ['wheat', 'corn', 'potato'].forEach(crop => {\r\n      loader.load(`/models/${crop}.glb`, (gltf) => {\r\n        const model = gltf.scene;\r\n        model.scale.set(0.3, 0.3, 0.3);\r\n        model.visible = false;\r\n        scene.add(model);\r\n        models[crop] = model;\r\n      });\r\n    });\r\n\r\n    // Store references\r\n    sceneRef.current = scene;\r\n    cameraRef.current = camera;\r\n    rendererRef.current = renderer;\r\n    modelsRef.current = models;\r\n\r\n    // Animation loop\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // Cleanup\r\n    return () => {\r\n      canvasRef.current.removeChild(renderer.domElement);\r\n      renderer.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Update drone position\r\n    if (droneRef.current) {\r\n      droneRef.current.position.set(\r\n        gameState.dronePosition.x - 2,\r\n        0.5,\r\n        gameState.dronePosition.y - 2\r\n      );\r\n    }\r\n\r\n    // Update crop positions\r\n    gameState.grid.forEach((row, x) => {\r\n      row.forEach((cell, y) => {\r\n        if (cell && modelsRef.current[cell.type]) {\r\n          const model = modelsRef.current[cell.type];\r\n          model.position.set(x - 2, 0, y - 2);\r\n          model.visible = true;\r\n        }\r\n      });\r\n    });\r\n  }, [gameState]);\r\n\r\n  const saveGame = () => {\r\n    localStorage.setItem('farmGame', JSON.stringify(gameState));\r\n    alert('Game saved!');\r\n  };\r\n\r\n  const loadGame = () => {\r\n    const savedGame = localStorage.getItem('farmGame');\r\n    if (savedGame) {\r\n      setGameState(JSON.parse(savedGame));\r\n      alert('Game loaded!');\r\n    } else {\r\n      alert('No saved game found!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GameContainer>\r\n      <GameHeader>\r\n        <GameInfo>\r\n          <InfoItem>\r\n            <span>ðŸ’°</span>\r\n            <span>${money}</span>\r\n          </InfoItem>\r\n          <InfoItem>\r\n            <span>ðŸŒ±</span>\r\n            <span>Seeds: {Object.entries(inventory).filter(([key]) => key.endsWith('_seeds')).length}</span>\r\n          </InfoItem>\r\n          <InfoItem>\r\n            <span>ðŸŒ¾</span>\r\n            <span>Crops: {Object.entries(inventory).filter(([key]) => !key.endsWith('_seeds')).length}</span>\r\n          </InfoItem>\r\n        </GameInfo>\r\n        <button onClick={onOpenTechTree}>Tech Tree</button>\r\n      </GameHeader>\r\n      \r\n      <GameContent>\r\n        <GameGrid>\r\n          {/* ... existing grid rendering ... */}\r\n        </GameGrid>\r\n        \r\n        <ThreeDView>\r\n          <Farm3D farmState={{\r\n            grid: gameState.grid,\r\n            dronePosition: gameState.dronePosition,\r\n            droneInventory: gameState.droneInventory\r\n          }} />\r\n        </ThreeDView>\r\n      </GameContent>\r\n      \r\n      <ConsoleArea>\r\n        <JavaScriptConsole gameState={gameState} setGameState={setGameState} />\r\n      </ConsoleArea>\r\n\r\n      <GameStats>\r\n        <div>Money: ${money}</div>\r\n        <div>Drone Position: ({gameState.dronePosition.x}, {gameState.dronePosition.y})</div>\r\n        <div>Drone Inventory: {JSON.stringify(gameState.droneInventory)}</div>\r\n      </GameStats>\r\n\r\n      <Market\r\n        money={money}\r\n        setMoney={setMoney}\r\n        inventory={inventory}\r\n        setInventory={setInventory}\r\n      />\r\n    </GameContainer>\r\n  );\r\n};\r\n\r\nexport default Game; "],"mappings":"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C5B;AACA;AACA;AACA;AACA,sBAAsBf,KAAK,IAAIA,KAAK,CAACK,KAAK;AAC1C;AACA,CAAC;AAED,MAAMW,WAAW,GAAG9C,MAAM,CAACa,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMkC,gBAAgB,GAAG/C,MAAM,CAACa,GAAG;AACnC;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMmC,WAAW,GAAGhD,MAAM,CAACa,GAAG;AAC9B;AACA;AACA;AACA,CAAC;AAED,MAAMoC,UAAU,GAAGjD,MAAM,CAACwC,MAAM;AAChC,sBAAsBV,KAAK,IAAIA,KAAK,CAACoB,MAAM,GAAG,SAAS,GAAG,SAAS;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBpB,KAAK,IAAIA,KAAK,CAACoB,MAAM,GAAG,SAAS,GAAG,SAAS;AACrE;AACA,CAAC;AAED,MAAMC,gBAAgB,GAAGnD,MAAM,CAACwC,MAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMY,cAAc,GAAGpD,MAAM,CAACa,GAAG;AACjC,aAAaiB,KAAK,IAAIA,KAAK,CAACoB,MAAM,GAAG,OAAO,GAAG,MAAM;AACrD;AACA,CAAC;AAED,MAAMG,aAAa,GAAGrD,MAAM,CAACa,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyC,GAAA,GANID,aAAa;AAQnB,MAAME,SAAS,GAAGvD,MAAM,CAACwD,EAAE;AAC3B;AACA;AACA,CAAC;AAED,MAAMC,UAAU,GAAGzD,MAAM,CAACa,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAM6C,YAAY,GAAG1D,MAAM,CAACa,GAAG;AAC/B;AACA;AACA;AACA;AACA,CAAC;AAED,MAAM8C,MAAM,GAAG3D,MAAM,CAACwC,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}